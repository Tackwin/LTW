#version 450
layout (location = 0) out vec4 g_albedo;
layout (location = 1) out vec4 g_normal;
layout (location = 2) out vec4 g_position;
layout (location = 3) out vec4 g_velocity;

uniform sampler2D color_texture;

flat in vec2 texture_pos;
in vec3 position;
in vec3 normal;
flat in uint tag;

in vec4 curr_pos_proj;
in vec4 last_pos_proj;
flat in vec3 color;

void main() {
	vec4 texel = texelFetch(
		color_texture,
		ivec2(texture_pos),
		0
	);

	g_normal = vec4(normal, 1);
	g_albedo = vec4(
		texel.r * color.r,
		texel.g * color.g,
		texel.b * color.b,
		1
	);
	g_position = vec4(position, 1);
	
	vec2 a  = (curr_pos_proj.xy / curr_pos_proj.w);
	vec2 b  = (last_pos_proj.xy / last_pos_proj.w);
	vec2 dt = (a - b);

	g_velocity = vec4(dt, 0, 1);
}
