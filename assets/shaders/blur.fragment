#version 300 es
precision highp float;
out vec4 FragColor;

in vec2 TexCoords;

uniform sampler2D image;
uniform int radius;

void main() {
	vec2 tex_offset = vec2(1.0);
	tex_offset.x /= float(textureSize(image, 0).x); // gets size of single texel
	tex_offset.y /= float(textureSize(image, 0).y); // gets size of single texel
	vec4 result = vec4(0); // current fragment's contribution
	
	int r = radius;

	for(int j = -r; j < r; ++j) {
		for(int i = -r; i < r; ++i) {
			result += texture(image, TexCoords + tex_offset * vec2(i, j));
		}
	}
	FragColor = vec4(result / float(r * r));
}