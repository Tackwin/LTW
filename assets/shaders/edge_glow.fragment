#version 300 es
precision highp float;

uniform mediump sampler2D buffer_normal;
uniform mediump sampler2D buffer_position;

out vec4 FragColor;

in vec2 TexCoords;

uniform vec3 cam_pos;

vec3 diff(
    sampler2D buf,
    vec2 x,
    float r
) {
    vec2 radius = vec2(r / float(textureSize(buf, 0).x), r / float(textureSize(buf, 0).y));

    vec3 result = vec3(0, 0, 0);
    vec3 dt = vec3(0, 0, 0);

    dt = texture(buf, x + vec2(-radius.x / 2.0, 0)).xyz;
    dt = dt - texture(buf, x + vec2(+radius.x / 200.0, 0)).xyz;
    result += length(dt);

    dt = texture(buf, x + vec2(0, -radius.y / 2.0)).xyz;
    dt = dt - texture(buf, x + vec2(0, +radius.y / 2.0)).xyz;
    result += length(dt);

    return result;
}

void main() {
    vec3 frag_pos = texture(buffer_position, TexCoords).xyz;
    vec3 normal   = texture(buffer_normal, TexCoords).xyz;
    if (normal.z == 1.0) discard;

    float edge_width = 2.0;
    float edge_mult = 1.0;

    float d = length(frag_pos - cam_pos);
    float cut = 3.0;
    if (d > cut) {
        edge_mult = 1.0 / (d - cut);
    }

    float dt_drag_pos = length(diff(buffer_position, TexCoords, edge_width));
    if (dt_drag_pos > 0.1) discard;

    FragColor = vec4(edge_mult * diff(buffer_normal, TexCoords, edge_width), 1.0);
}
