#version 300 es
precision mediump float;
uniform sampler2D texture_input;
uniform mediump sampler2D texture_velocity;

uniform float scale;

out vec4 result;
in vec2 TexCoords;

void main() {
	vec2 texel_size = 1.0 / vec2(textureSize(texture_input, 0));

	vec2 velocity = texture(texture_velocity, TexCoords).xy;
	velocity *= scale;

	float speed = length(velocity / texel_size);
	if (abs(speed) > 1.0) speed = pow(speed, 1.0 / 2.0);
	int n_samples = clamp(int(speed), 1, 16);


	result = texture(texture_input, TexCoords);
	for (int i = 1; i < n_samples; ++i) {
		vec2 offset = velocity * (float(i) / float(n_samples - 1));
		result += texture(texture_input, TexCoords + offset);
	}
	result /= float(n_samples);
	result.a = 1.0;


	//result = vec4(vec3(speed * 0.5), 1);

	//result = vec4(velocity, 0, 1);
	//result = texture(texture_input, TexCoords);
}